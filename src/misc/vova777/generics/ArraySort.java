package misc.vova777.generics;



import java.util.Arrays;
import java.util.Comparator;

public class ArraySort {

//    2.1 Реализовать статический метод с именем sort, сортирующий произвольный массив обобщающих типов,
//    по алгоритму из первого урока:
//
//1. Берем первый элемент и сравниваем его со вторым, если второй меньше, меняем элементы в массиве местами.
//2. Далее, сравниваем первый элемент с третьим, и если третий меньше, меняем их местами.
//3. Так делаем для всех элементов с индексом больше первого
//4. Берем второй элемент и сравниваем его с третьим, если нужно, меняем местам
//5. Далее сравниваем второй элемент с четвертым, и если нужно, меняем местами.
//6. Делаем так для всех элементов, с индексом больше 2-го
//7. Переходим к элементу с индексом 3...
//            8. Обобщая, алгоритм звучит следующим образом - сделать 2 вложенных цикла, внешний по i и внутренний по j.
//            Внутренний цикл начинается от i+1, и если a[i] > a[j], то нужно поменять элементы a[i] и a[j] местами.

    public static <T extends Comparable> void sort(T[] a){
        for ( int i = 0; i < a.length - 1; i++){
            for (int j = i + 1; j < a.length; j++){
                T k;
                if (a[i].compareTo(a[j]) > 0) {k = a[i]; a[i] = a[j]; a[j] = k;}
            }
        }
    }



    public static void main(String[] args) {
        Integer[] arrInt = {2,4,1,6,0,7,8,234,6};
        sort(arrInt);
        System.out.println(Arrays.toString(arrInt));

        String[] arrStr = {"auto", "y","t","r","a","f","123","10","b"};
        sort(arrStr);
        System.out.println(Arrays.toString(arrStr));

    }
}
